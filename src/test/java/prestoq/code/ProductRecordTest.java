/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package prestoq.code;

import org.junit.Test;
import static org.junit.Assert.*;

public class ProductRecordTest {
    private static final String SAMPLE_LINE_1 =
	"80000001 Kimchi-flavored white rice                                  00000567 00000000 -0000567 00000000 00000000 00000000 NNNNNNNNN      18oz";
    private static final String SAMPLE_LINE_2 =
	"14963801 Generic Soda 12-pack                                        00000000 00000549 00001300 00000000 00000003 00000000 NNNNYNNNN   12x12oz";
    
    @Test public void testSimpleBuilding() {
	ProductRecord.Builder b = new ProductRecord.Builder(SAMPLE_LINE_1);
        assertNotNull("should have a builder", b);
	assertEquals("id needs to match", 80000001, b.getProductId());
	assertEquals("first price needs to match", 567, b.getRegularSingularPrice());
	assertEquals("second price needs to be zero", 0, b.getPromotionalSingularPrice());
	assertEquals("third price needs to be negative", -567, b.getRegularSplitPrice());
	assertTrue("cant find size string", b.getProductSize().indexOf("18oz") >= 0);
	assertEquals("cant find size string", "18oz", b.getProductSize().trim());
    }

    @Test public void testSimpleRecord() {
	ProductRecord record = new ProductRecord.Builder(SAMPLE_LINE_2).build();
	assertEquals("need the id", 14963801, record.getProductId());
	assertTrue("need the description", record.getProductDescription().indexOf("Generic Soda") >= 0);
	assertEquals("need regular display price", "$13.00 for 3", record.getRegularDisplayPrice());
	assertEquals("need promo display price", "$5.49", record.getPromotionalDisplayPrice());
	assertEquals("need regular calculated price", "$4.3333", record.getRegularCalculatedPrice());
	assertEquals("need promo calculated price", "$5.49", record.getPromotionalCalculatedPrice());
	assertEquals("need tax rate", ProductRecord.TAX_RATE, record.getTaxRate(), .00001);
    }
}
